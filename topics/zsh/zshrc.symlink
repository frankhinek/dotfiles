#!/bin/zsh

# Shortcut to the dotfiles path is $DOTFILES_ROOT
export DOTFILES_ROOT="$HOME/.dotfiles"

# Directory for storing development projects that can be `c [tab]` to
export PROJECTS="$HOME/Code"

# Default editor
export EDITOR='atom'

# Store all of our .zsh files as parameters
typeset -U config_files
config_files=($DOTFILES_ROOT/topics/*/*.zsh)

# Iterate through the list of files load only those named path.zsh
# `source` takes as argument a script which is then executed in the environment
# of the current session - i.e. you will retain all changes the script does to
# the environment, which is not the case when just executing the script.
for file in ${(M)config_files:#*/path.zsh}; do
  source "$file"
done

# Load antibody plugins
source ~/.zsh_plugins.sh

# Load everything but the path and completion files
for file in ${${config_files:#*/path.zsh}:#*/completion.zsh}; do
  source "$file"
done

# Load completions
autoload -Uz compinit
typeset -i updated_at=$(date +'%j' -r ~/.zcompdump 2>/dev/null || stat -f '%Sm' -t '%j' ~/.zcompdump 2>/dev/null)
if [ $(date +'%j') != $updated_at ]; then
  compinit
else
  compinit -C
fi

# Load every completion after autocomplete loads
for file in ${(M)config_files:#*/completion.zsh}; do
  source "$file"
done

# Unsets the parameter since we no longer need it
unset config_files updated_at

# Use .localrc for SECRETS that you don't want in your public, versioned repo.
[ -f ~/.localrc ] && . ~/.localrc
